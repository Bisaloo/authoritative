[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 package authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/design-principles.html","id":"scope","dir":"Articles","previous_headings":"","what":"Scope","title":"Design Principles for authoritative","text":"< Outline aims package, potentially mention key exported functions, maybe links R packages. also possible mention certain aspects fall outside package’s scope. >","code":""},{"path":"/articles/design-principles.html","id":"naming-conventions","dir":"Articles","previous_headings":"","what":"Naming conventions","title":"Design Principles for authoritative","text":"< Description scheme /conventions used naming functions arguments. can use prefix exported functions, name mould (“function named verb_object”), naming convention used throughout package. >","code":""},{"path":"/articles/design-principles.html","id":"inputoutputinteroperability","dir":"Articles","previous_headings":"","what":"Input/Output/Interoperability","title":"Design Principles for authoritative","text":"< Describe data structures (.e. vectors, <data.frames> classes) given input key functions data structures functions return. design decisions around /O choices also mention enhances interoperability R packages pipelines (e.g. %>%). >","code":""},{"path":"/articles/design-principles.html","id":"design-decisions","dir":"Articles","previous_headings":"","what":"Design decisions","title":"Design Principles for authoritative","text":"< list bullet points explaining design decision reasoning. >","code":""},{"path":"/articles/design-principles.html","id":"dependencies","dir":"Articles","previous_headings":"","what":"Dependencies","title":"Design Principles for authoritative","text":"< list dependencies used package explanation required. dependencies need explained best explain key dependencies. can used give context certain dependencies used (e.g. “package expected used tidyverse pipelines , consider tidyverse packages good dependencies already installed user’s computer.”). section can also mention dependencies planned removed added future development. Suggested dependencies need explained unless unusual may surprise developers inclusion. >","code":""},{"path":"/articles/design-principles.html","id":"development-journey","dir":"Articles","previous_headings":"","what":"Development journey","title":"Design Principles for authoritative","text":"< package undergone large refactoring section can used explain changes. >","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hugo Gruson. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gruson H (2024). authoritative: Package Title Titlecase. R package version 0.0.1.","code":"@Manual{,   title = {authoritative: Your Package Title in Titlecase},   author = {Hugo Gruson},   year = {2024},   note = {R package version 0.0.1}, }"},{"path":"/index.html","id":"authoritative-","dir":"","previous_headings":"","what":"Your Package Title in Titlecase","title":"Your Package Title in Titlecase","text":"authoritative provides functions ….","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Your Package Title in Titlecase","text":"can install development version authoritative GitHub :","code":"# install.packages(\"pak\") pak::pak(\"Bisaloo/authoritative\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Your Package Title in Titlecase","text":"examples illustrate current functionalities","code":""},{"path":[]},{"path":"/index.html","id":"lifecycle","dir":"","previous_headings":"Development","what":"Lifecycle","title":"Your Package Title in Titlecase","text":"package currently concept, defined RECON software lifecycle. means essential features mechanisms still developed, package ready use outside development team.","code":""},{"path":"/index.html","id":"contributions","dir":"","previous_headings":"Development","what":"Contributions","title":"Your Package Title in Titlecase","text":"Contributions welcome via pull requests.","code":""},{"path":"/index.html","id":"related-projects","dir":"","previous_headings":"Development","what":"Related projects","title":"Your Package Title in Titlecase","text":"project related existing projects R languages, also differs following aspects:","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"Development","what":"Code of Conduct","title":"Your Package Title in Titlecase","text":"Please note authoritative project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/reference/authoritative-package.html","id":null,"dir":"Reference","previous_headings":"","what":"authoritative: Your Package Title in Titlecase — authoritative-package","title":"authoritative: Your Package Title in Titlecase — authoritative-package","text":"package description. must end period (\".\") include relevant bibliographical references applicable, using following format: Author et al. (2023) doi:10.5281/zenodo.6619350 .","code":""},{"path":"/reference/authoritative-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"authoritative: Your Package Title in Titlecase — authoritative-package","text":"Maintainer: Hugo Gruson hugo@data.org (ORCID)","code":""},{"path":"/reference/parse_authors_r.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse the Authors@R field from a DESCRIPTION file — parse_authors_r","title":"Parse the Authors@R field from a DESCRIPTION file — parse_authors_r","text":"Parse Authors@R field DESCRIPTION file person object","code":""},{"path":"/reference/parse_authors_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse the Authors@R field from a DESCRIPTION file — parse_authors_r","text":"","code":"parse_authors_r(authors_r_string)"},{"path":"/reference/parse_authors_r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse the Authors@R field from a DESCRIPTION file — parse_authors_r","text":"authors_r_string character containing Authors@R field DESCRIPTION file","code":""},{"path":"/reference/parse_authors_r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse the Authors@R field from a DESCRIPTION file — parse_authors_r","text":"person object","code":""},{"path":"/reference/parse_authors_r.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse the Authors@R field from a DESCRIPTION file — parse_authors_r","text":"","code":"# Read from a DESCRIPTION file directly pkg_description <- system.file(\"DESCRIPTION\", package = \"authoritative\") authors_r_pkg <- read.dcf(pkg_description, \"Authors@R\")  parse_authors_r(authors_r_pkg) #> [[1]] #> [1] \"Hugo Gruson <hugo@data.org> [aut, cre] (<https://orcid.org/0000-0002-4094-1476>)\" #>   # Read from a database of CRAN metadata cran_epidemiology_packages$`Authors@R` |>    parse_authors_r() |>    head() #> [[1]] #> [1] NA #>  #> [[2]] #> [1] NA #>  #> [[3]] #> [1] NA #>  #> [[4]] #> [1] NA #>  #> [[5]] #> [1] NA #>  #> [[6]] #> [1] NA #>"},{"path":"/reference/remove_brackets.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove content between brackets — remove_brackets","title":"Remove content between brackets — remove_brackets","text":"Remove content brackets","code":""},{"path":"/reference/remove_brackets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove content between brackets — remove_brackets","text":"","code":"remove_brackets(string, bracket = c(\"(\", \"<\", \"[\"))"},{"path":"/reference/remove_brackets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove content between brackets — remove_brackets","text":"string character vector clean bracket Type bracket containing content remove. Must one \"(\" (default), \"<\", \"[\"","code":""},{"path":"/reference/remove_brackets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove content between brackets — remove_brackets","text":"character vector size string, elements stripped bracketted content.","code":""},{"path":"/reference/remove_brackets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove content between brackets — remove_brackets","text":"","code":"remove_brackets(   \"R source code is versioned with svn (and mirrored on GitHub)\" ) #> [1] \"R source code is versioned with svn \"  remove_brackets(   c(\"r-project.org <https://r-project.org>\", \"python.org <https://python.org>\"),   bracket = \"<\" ) #> [1] \"r-project.org \" \"python.org \"     remove_brackets(   \"Content in square bracket [is removed] in the middle of a string\",   bracket = \"[\" ) #> [1] \"Content in square bracket  in the middle of a string\""}]
